/* ========================================================================== 
   FLAG CUBE – 1:1 GEOMETRIE (Desktop = Referenz), Mobile reine Skalierung
   ========================================================================== */

.flag-cube-root {
  --base-width: 520px;              /* Referenz-Breite der unskalierten Szene */
  --scale: clamp(0.55, (100vw - 2rem) / var(--base-width), 1);
  position: relative;
  width: 100%;
  max-width: var(--base-width);
  height: calc(var(--base-width) * 0.90 * var(--scale)); /* Reserviert vertikal Raum */
  margin: 0 auto;
  pointer-events: none; /* Interaktion nur auf Tiles */
}

/* Skaliert die gesamte Original-Szene ohne interne Geometrieveränderung */
.flag-cube-scale {
  position: absolute;
  inset: 0;
  width: var(--base-width);
  height: var(--base-width);
  transform: scale(var(--scale));
  transform-origin: top left;
  pointer-events: none;
}

/* Original-Offsets */
.flag-cube-scale .container {
  position: relative;
  top: -70px;            /* Feintuning: -80 war sehr hoch, -70 bessere Balance */
  transform: skewY(-20deg);
  pointer-events: none;
}

/* Layer (3) */
.flag-cube-scale .container .cube {
  position: relative;
  z-index: 2;
  pointer-events: none;
}
.flag-cube-scale .container .cube:nth-child(2) {
  z-index: 1;
  transform: translate(-60px, -60px);
}
.flag-cube-scale .container .cube:nth-child(3) {
  z-index: 3;
  transform: translate(60px, 60px);
}

/* Spalten */
.flag-cube-scale .container .cube > div {
  position: absolute;
  display: flex;
  flex-direction: column;
  gap: 30px;
  transform: translate(calc(-70px * var(--x)), calc(-60px * var(--y)));
  pointer-events: none;
}

/* Tiles (Basis neutral) */
.flag-cube-scale .container .cube > div > span {
  --fade-duration: 6s;
  position: relative;
  display: inline-block;
  width: 50px;
  height: 50px;
  z-index: calc(1 * var(--i));
  cursor: pointer;
  pointer-events: auto;
  background: #ffffff;
  border-radius: 9px;
  box-shadow:
    0 4px 14px -2px rgba(0,0,0,0.18),
    0 2px 6px -1px rgba(0,0,0,0.25),
    0 0 0 1px rgba(0,0,0,0.05) inset;
  transition: background var(--fade-duration) ease,
              filter var(--fade-duration) ease;
  filter: brightness(0.97);
  /* Für saubere Kanten auf Mobile */
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden;
}

/* Pseudo-Flächen (Seite/Deckel) */
.flag-cube-scale .container .cube > div > span::before,
.flag-cube-scale .container .cube > div > span::after {
  content: "";
  position: absolute;
  transition: background var(--fade-duration) ease;
  border-radius: 6px;
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden;
}

.flag-cube-scale .container .cube > div > span::before {
  left: -40px;
  width: 40px;
  height: 100%;
  background: #f2f2f2;
  transform-origin: right;
  transform: skewY(45deg);
  border-top-left-radius: 8px;
  border-bottom-left-radius: 8px;
}
.flag-cube-scale .container .cube > div > span::after {
  top: -40px;
  left: 0;
  width: 100%;
  height: 40px;
  background: #e6e6e6;
  transform-origin: bottom;
  transform: skewX(45deg);
  border-top-right-radius: 8px;
  border-top-left-radius: 8px;
}

/* HOVER / ACTIVE -> komplette Färbung (Front + Seiten + Top gleichfarbig) */
@media (hover:hover) {
  .flag-cube-scale .container .cube > div > span:hover {
    transition-duration: 0s;
    filter: brightness(1) drop-shadow(0 0 18px var(--cube-color));
    background: var(--cube-color);
  }
  .flag-cube-scale .container .cube > div > span:hover::before,
  .flag-cube-scale .container .cube > div > span:hover::after {
    transition-duration: 0s;
    background: var(--cube-color);
  }
}

/* Touch (Tap) */
@media (hover:none) {
  .flag-cube-scale .container .cube > div > span:active {
    transition-duration: 0s;
    filter: brightness(1) drop-shadow(0 0 14px var(--cube-color));
    background: var(--cube-color);
  }
  .flag-cube-scale .container .cube > div > span:active::before,
  .flag-cube-scale .container .cube > div > span:active::after {
    transition-duration: 0s;
    background: var(--cube-color);
  }
}

/* Farbzuordnung (Hover-Zustand) per Reihe */
.flag-cube-scale .container .cube > div:nth-child(1) > span { --cube-color: #000000; }
.flag-cube-scale .container .cube > div:nth-child(2) > span { --cube-color: #ffffff; }
.flag-cube-scale .container .cube > div:nth-child(3) > span { --cube-color: #007a3d; }

/* Linkes "Dreieck" pro Spalte (erstes span) = Rot */
.flag-cube-scale .container .cube > div > span:first-child {
  --cube-color: #ce1126;
}

/* Optionale leichte Grundaufhellung auf aktiver Fläche (wenn zurückfadet bleibt es weich) */
.flag-cube-scale .container .cube > div > span:hover,
.flag-cube-scale .container .cube > div > span:active {
  filter: brightness(1) drop-shadow(0 0 10px var(--cube-color));
}
