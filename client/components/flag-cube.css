/* ==========================================================================
   FLAG CUBE – zentriert & proportional skaliert
   - Keine absolute Positionierung mehr
   - Einheitliche Geometrie Desktop/Mobile
   - Volle Farbfüllung beim Hover/Active
   - Justierbare Offsets via Variablen
   ========================================================================== */

.flag-cube-root {
  --base-width: 520px;             /* Vollgröße (Referenz) */
  --scale: clamp(0.55, (100vw - 4rem) / var(--base-width), 1);
  --y-offset: 0px;                 /* Feinjustierung vertikal (positiv = runter) */
  --fade-duration: 6s;

  width: 100%;
  display: flex;
  justify-content: center;
  position: relative;
  margin: 0 auto;
  margin-bottom: 1.5rem;           /* Abstand nach unten Richtung Artikel */
  pointer-events: none;
}

.flag-cube-scale {
  width: var(--base-width);
  height: var(--base-width); /* groß genug für alle Layer */
  transform: translateY(var(--y-offset)) scale(var(--scale));
  transform-origin: top center;
  position: relative;
  pointer-events: none;
}

/* Ursprüngliche Szene */
.flag-cube-scale .container {
  position: relative;
  /* Statt brutal -80 jetzt moderater; Feintuning via --y-offset oben einstellbar */
  top: -50px;
  transform: skewY(-20deg);
  pointer-events: none;
}

/* Drei Layer (versetzt) */
.flag-cube-scale .container .cube {
  position: relative;
  z-index: 2;
  pointer-events: none;
}
.flag-cube-scale .container .cube:nth-child(2) {
  z-index: 1;
  transform: translate(-60px, -60px);
}
.flag-cube-scale .container .cube:nth-child(3) {
  z-index: 3;
  transform: translate(60px, 60px);
}

/* Spalten */
.flag-cube-scale .container .cube > div {
  position: absolute;
  display: flex;
  flex-direction: column;
  gap: 30px;
  transform: translate(calc(-70px * var(--x)), calc(-60px * var(--y)));
  pointer-events: none;
}

/* Tiles */
.flag-cube-scale .container .cube > div > span {
  position: relative;
  display: inline-block;
  width: 50px;
  height: 50px;
  z-index: calc(1 * var(--i));
  cursor: pointer;
  pointer-events: auto;

  background: #ffffff;
  border-radius: 9px;
  box-shadow:
    0 5px 16px -3px rgba(0,0,0,0.22),
    0 3px 7px -2px rgba(0,0,0,0.28),
    0 0 0 1px rgba(0,0,0,0.05) inset;
  transition: background var(--fade-duration) ease,
              filter var(--fade-duration) ease;
  filter: brightness(0.98);
  -webkit-backface-visibility: hidden;
          backface-visibility: hidden;
}

/* Seiten- & Topflächen durch pseudo-Elements */
.flag-cube-scale .container .cube > div > span::before,
.flag-cube-scale .container .cube > div > span::after {
  content: "";
  position: absolute;
  transition: background var(--fade-duration) ease;
  -webkit-backface-visibility: hidden;
          backface-visibility: hidden;
}

.flag-cube-scale .container .cube > div > span::before {
  left: -40px;
  width: 40px;
  height: 100%;
  background: #f2f2f2;
  transform-origin: right;
  transform: skewY(45deg);
  border-top-left-radius: 8px;
  border-bottom-left-radius: 8px;
}

.flag-cube-scale .container .cube > div > span::after {
  top: -40px;
  left: 0;
  width: 100%;
  height: 40px;
  background: #e6e6e6;
  transform-origin: bottom;
  transform: skewX(45deg);
  border-top-right-radius: 8px;
  border-top-left-radius: 8px;
}

/* Farb-Definition (Hover-/Active-Ziel) */
.flag-cube-scale .container .cube > div:nth-child(1) > span { --cube-color: #000000; }
.flag-cube-scale .container .cube > div:nth-child(2) > span { --cube-color: #ffffff; }
.flag-cube-scale .container .cube > div:nth-child(3) > span { --cube-color: #007a3d; }
.flag-cube-scale .container .cube > div > span:first-child { --cube-color: #ce1126; }

/* Vollflächige Einfärbung */
@media (hover:hover) {
  .flag-cube-scale .container .cube > div > span:hover {
    transition-duration: 0s;
    background: var(--cube-color);
    filter: brightness(1) drop-shadow(0 0 16px var(--cube-color));
  }
  .flag-cube-scale .container .cube > div > span:hover::before,
  .flag-cube-scale .container .cube > div > span:hover::after {
    transition-duration: 0s;
    background: var(--cube-color);
  }
}

@media (hover:none) {
  .flag-cube-scale .container .cube > div > span:active {
    transition-duration: 0s;
    background: var(--cube-color);
    filter: brightness(1) drop-shadow(0 0 14px var(--cube-color));
  }
  .flag-cube-scale .container .cube > div > span:active::before,
  .flag-cube-scale .container .cube > div > span:active::after {
    transition-duration: 0s;
    background: var(--cube-color);
  }
}

/* Optional: Sanfte Performance-Anpassung für sehr kleine Screens (nur optisch):
   (Hier NICHTS geändert, weil 1:1 gewünscht.)
*/
